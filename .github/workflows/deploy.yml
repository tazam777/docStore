name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-2
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to ECR
      run: |
        ECR_REPO=${{ secrets.ECR_REPO_URL }}
        docker build -t $ECR_REPO:${{ env.IMAGE_TAG }} .
        docker push $ECR_REPO:${{ env.IMAGE_TAG }}

    - name: Create PEM file from GitHub Secret
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
        chmod 600 ec2-key.pem

    - name: Deploy to EC2s
      run: |
        for host in ${{ secrets.EC2_IPS }}; do
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@$host "
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin \$(echo ${{ secrets.ECR_REPO_URL }} | cut -d/ -f1)
            docker pull ${{ secrets.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}
            docker rm -f app || true
            docker run -d --restart=always -p 8080:8080 --name app ${{ secrets.ECR_REPO_URL }}:${{ env.IMAGE_TAG }}
          "
        done
      shell: bash
